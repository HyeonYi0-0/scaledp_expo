# Configuration for ScaleDP Finetuning Workspace
defaults:
  - _self_
  - task: square_image

# Project settings
name: "finetune_robomimic_image"
_target_: src.workspace.finetune_scaledp_workspace.finetuneScaleDPWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

horizon: 8
n_obs_steps: 1
n_action_steps: 1
seed: 0
n_latency_steps: 0
dataset_obs_steps: 1
past_action_visible: False
keypoint_visible_rate: 1.0
obs_as_cond: True

policy:
  _target_: src.policy.ScaleDP_hybrid_image_policy.ScaleDiffusionTransformerHybridImagePolicy

  model_size: 'ScaleDP_B'       # ScaleDP model size -> 'ScaleDP_H', 'ScaleDP_L', 'ScaleDP_B', 'ScaleDP_S', 'ScaleDP_Ti'
  shape_meta: ${shape_meta}
  crop_shape: [76,76]           # robomimic [76, 76], libero [200, 200]

  # oc.select resolver: key, default
  task_name: ${oc.select:task.task_name,square}
  dataset_type: ${oc.select:task.dataset_type,ph}

  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddim.DDIMScheduler
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2 
    beta_start: 0.0001
    clip_sample: true
    num_train_timesteps: 100
    prediction_type: epsilon
    # variance_type: fixed_small

  horizon: ${horizon}
  n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  n_obs_steps: ${n_obs_steps}
  num_inference_steps: 100
  obs_encoder_group_norm: True
  eval_fixed_crop: True
  obs_as_cond: ${obs_as_cond}

ema:
  _target_: src.model.diffusion.ema_model.EMAModel
  inv_gamma: 1.0
  max_value: 0.9999
  min_value: 0.0
  power: 0.75
  update_after_step: 0

# log settings
log_interval: 1000

# Training settings
utd_ratio: 20
batch_size: 256
global_max_steps: 500000  # 5e5
start_training: ${eval:'int(${batch_size}*${utd_ratio})'}  # 1e3

# Environment settings
replay_buffer_size: 1000000  # Will use global_max_steps // action_repeat if null
action_repeat: 1  # Will use PLANET defaults if null

# Agent configuration
agent:
  edit_policy_lr: 3e-4
  critic_lr: 3e-4
  temp_lr: 3e-4
  hidden_dims: [256, 256, 256]
  discount: 0.99
  clip_beta: 0.1
  n_samples: 8
  tau: 0.005
  num_qs: 10
  num_min_qs: 2
  critic_dropout_rate: null
  critic_layer_norm: false
  target_entropy: null
  init_temperature: 1.0
  backup_entropy: true
  device: "cuda:1"  # or "cuda"

# Training configuration
training:
  seed: 42
  device: "cuda:3"  # or "cuda"
  use_ema: True
  lr_scheduler: "cosine"
  lr_warmup_steps: 1000
  gradient_accumulate_every: 1
  debug: True
  resume: True
  num_cycles: 100
  rollout_every: 1000       # 단위: step
  checkpoint_every: 1000    # 단위: step

# Checkpointing
checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'step={step:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

# Logging configuration
logging:
  project: "finetune_scaledp_expo"
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

# Optimizer configuration
optimizer:
  transformer_weight_decay: 1.0e-1
  obs_encoder_weight_decay: 1.0e-6
  learning_rate: 1.0e-4
  betas: [0.9, 0.99]

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
